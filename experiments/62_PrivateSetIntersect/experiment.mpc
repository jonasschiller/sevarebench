"""
For Field Protocols use -Y
For Ring Protocols use -Z and -R 64
For Binary Protocols use -B 32
"""

from util import if_else
	

size = int(program.args[1])
program.bit_length = 32
player = int(program.args[2])
n = size

datatype = sint
"""Naive private set intersection on two Arrays, followed by computing the size and average of the intersection"""
a = Array(n, datatype)
b = Array(n, datatype)

a.assign_all(1)
b.assign_all(1)

intersection = Array(n, sint)

@for_range_opt(n)
def _(j):
        match = a.get_vector() == b[j]
        sum = 0
        for i in range(n):
                sum += match[i]
        intersection[j] = if_else(sum>0, a[j], intersection[j])

intersection.print_reveal_nested()



	
		

	